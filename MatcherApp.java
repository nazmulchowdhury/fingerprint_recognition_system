
/**
 *
 * @author nazmulchowdhury
 */

import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;

public class MatcherApp extends javax.swing.JFrame implements java.awt.event.ActionListener {

    /**
     * Creates new form MatcherApp
     */
    public MatcherApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fpi = new javax.swing.JLabel();
        matchscr = new javax.swing.JTextField();
        matchscr.setEditable(false);
        mainImgP = new ImagePanel(PANEL_WIDTH,PANEL_HEIGHT);
        thnTdP = new ImagePanel(PANEL_WIDTH,PANEL_HEIGHT);
        mthntdP = new ImagePanel(PANEL_WIDTH,PANEL_HEIGHT);
        mainImg = new javax.swing.JScrollPane(mainImgP);
        thntd = new javax.swing.JScrollPane(thnTdP);
        mthntd = new javax.swing.JScrollPane(mthntdP);
        upload = new javax.swing.JButton();
        verify = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        scanPanel = new ScanPanel(thnTdP);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("fp.jpg")).getImage());

        fpi.setFont(new java.awt.Font("Liberation Mono", 1, 16)); // NOI18N
        fpi.setText("Fingerprint Matcher");
        
        matchscr.setFont(new java.awt.Font("Liberation Mono", 1, 16));

        upload.setFont(new java.awt.Font("Liberation Mono", 1, 16)); // NOI18N
        upload.setText("Upload");
        upload.setFocusable(false);
        upload.addActionListener(this);

        verify.setFont(new java.awt.Font("Liberation Mono", 1, 16)); // NOI18N
        verify.setText("Match");
        verify.setFocusable(false);
        verify.addActionListener(this);

        cancel.setFont(new java.awt.Font("Liberation Mono", 1, 16)); // NOI18N
        cancel.setText("Cancel");
        cancel.setFocusable(false);
        cancel.addActionListener(this);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(mainImg, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(thntd, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(mthntd, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(fpi, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(339, 339, 339)))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(upload)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(verify)
                .addGap(223, 223, 223)
                .addComponent(cancel)
                .addGap(118, 118, 118))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(matchscr, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(196, 196, 196))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(fpi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mainImg, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                    .addComponent(thntd)
                    .addComponent(mthntd, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(matchscr, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(upload)
                    .addComponent(verify)
                    .addComponent(cancel))
                .addGap(26, 26, 26))
        );

        pack();
        setTitle("Fingerprint Recognition System");
        setResizable(false);
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    @Override
    public void actionPerformed(java.awt.event.ActionEvent e)
    {
        if (e.getSource() == upload)
        {
            JFileChooser jfc = new JFileChooser(CLAIMER);
            jfc.setAcceptAllFileFilterUsed(true);
            
            try
            {
                if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)       
                {
                    String fnm = jfc.getSelectedFile().getPath();
                    printName  = jfc.getSelectedFile().getName();
                    mnImg = javax.imageio.ImageIO.read(new File(fnm));
                    mainImgP.setImage(mnImg);
                    scanPanel.getAbsPath(fnm);
                }
            }
            catch (HeadlessException | IOException et)
            {
                System.exit(0);
            }
        }
        else if (e.getSource() == verify)
        {
            if (mnImg == null)
                return;
            File file = new File(FingerUtils.PRINT_DIR_IDN);
            for (File fil : file.listFiles())
                fil.delete();
            scanPanel.findPrint();
            scanPanel.mtchAnalyzePrint(printName);
            match = new Matcher(printName);
            matchImg = match.getMatchedLabel();
            mthntdP.setImage(matchImg);
            matchscr.setText(" Matching Scroe : "+String.valueOf(match.getScore()));
            
            if(match.getScore() >= 65)
                javax.swing.JOptionPane.showMessageDialog(null, "You can access the system", "Recognition Successful", 1);
            else                
                javax.swing.JOptionPane.showMessageDialog(null, "Sorry you can't access the system", "Warning", 2);
        }
        else if (e.getSource() == cancel)
        {
            File file = new File(FingerUtils.PRINT_DIR_IDN);
            for (File fil : file.listFiles())
                fil.delete();
            new FPRecognizer().setVisible(true);
            this.setVisible(false);
        }
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JLabel fpi;
    private javax.swing.JTextField matchscr;
    private javax.swing.JScrollPane mainImg;
    private javax.swing.JScrollPane mthntd;
    private javax.swing.JScrollPane thntd;
    private javax.swing.JButton upload;
    private javax.swing.JButton verify;
    private java.awt.image.BufferedImage mnImg,matchImg;
    private ImagePanel mainImgP,thnTdP,mthntdP;
    private Matcher match;
    private ScanPanel scanPanel;
    private String printName;
    public static final String CLAIMER = "claimer/";
    private static final int PANEL_WIDTH = 252;
    private static final int PANEL_HEIGHT = 269;
    // End of variables declaration//GEN-END:variables
}